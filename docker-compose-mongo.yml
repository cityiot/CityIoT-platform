# Copyright 2020 Tampere University
# This software was developed as a part of the CityIoT project: https://www.cityiot.fi/english
# This source code is licensed under the 3-clause BSD license. See license.txt in the repository root directory.
# Author(s): Ville Heikkil√§ <ville.heikkila@tuni.fi>

version: '3.5'

services:

  mongodb:
    image: mongo:${MONGO_VERSION:-3.6.16}
    # the bind_ip option is required from MONGO Version 3.6, alternatively you can use --bind_ip_all
    entrypoint: ["/usr/bin/mongod", "--replSet", "${REPLICASET_NAME:-rs}", "--journal", "--smallfiles", "--bind_ip", "0.0.0.0"]
    # The usage of volume provides persistence, but may work correctly only with 1 volume per node (that's why global mode is recommended)
    volumes:
      - mongodata:/data/db
    networks:
      - cityiot
    configs:
    # to avoid changes to the original mongo image, we import the healthcheck script using configs
      - mongo-healthcheck
    # it simply checks that the client can connect to mongo. No test is run w.r.t. the cluster.
    healthcheck:
        test: ["CMD", "bash", "/mongo-healthcheck"]
        interval: 1m
        timeout: 15s
        retries: 3
    deploy:
      mode: global
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        delay: 1m30s

  controller:
    image: smartsdk/mongo-rs-controller-swarm:latest
    volumes:
      # TODO: Avoid exposing the docker socket (security issue)
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./env/mongo.env
    entrypoint: python /src/replica_ctrl.py
    networks:
      - cityiot
    depends_on:
      - mongodb
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: any

configs:
  # to avoid changes to the original mongo image, we import the healthcheck script using configs
  mongo-healthcheck:
    file: ./scripts/mongo-healthcheck

volumes:
  # External true ensures that the volume is not re-created if already present
  mongodata:
    external: true
    name: mongo_data

networks:
  cityiot:
    external: true
    name: ${CITYIOT_NETWORK_NAME:-cityiot}
